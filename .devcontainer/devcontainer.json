{
  "name": "Zenith Dev Environment",
  "dockerComposeFile": "docker-compose.yml",

  // Tells VS Code which service to connect to
  "service": "app",

  // Sets the workspace folder inside the container
  "workspaceFolder": "/workspace",

  // Forwards ports from the container to your local machine
  "forwardPorts": [5432],

  // Installs recommended VS Code extensions inside the container
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-dotnettools.csdevkit",
        "unoplatform.uno-platform",
        "ms-azuretools.vscode-docker",
        "ms-ossdata.vscode-postgresql",
        "Catppuccin.catppuccin-vsc-icons",
        "usernamehw.errorlens",
        "mikestead.dotenv",
        "alefragnani.Bookmarks",
        "jeff-hykin.better-dockerfile-syntax",
        "alefragnani.project-manager",
        "tomoki1207.pdf",
        "piotrpalarz.vscode-gitignore-generator",
        "kreativ-software.csharpextensions",
        "k--kato.docomment",
        "kenan-salar.calmppuccin-vscode",
        "EditorConfig.EditorConfig",
        "GrapeCity.gc-excelviewer",
        "mkxml.vscode-filesize",
        "mhutchie.git-graph",
        "github.vscode-github-actions",
        "quentinguidee.gitignore-ultimate",
        "kisstkondoros.vscode-gutter-preview",
        "wix.vscode-import-cost",
        "ms-dotnettools.vscodeintellicode-csharp",
        "yycalm.linecount",
        "ms-vsliveshare.vsliveshare",
        "yzhang.markdown-all-in-one",
        "DavidAnson.vscode-markdownlint",
        "christian-kohler.path-intellisense",
        "ms-ossdata.vscode-pgsql",
        "ms-vscode.powershell",
        "josefpihrt-vscode.roslynator",
        "albert.TabOut",
        "Gruntfuggly.todo-tree",
        "unoplatform.vscode",
        "pflannery.vscode-versionlens",
        "fullstackspider.visual-nuget",
        "redhat.vscode-xml",
        "DotJoshJohnson.xml",
        "redhat.vscode-yaml"
      ]
    }
  },

  // Runs commands after the container is created
  "postCreateCommand": "dotnet tool install -g uno.check && dotnet restore"
}
